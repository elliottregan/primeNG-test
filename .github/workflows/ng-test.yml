name: NG Tests

on:
  pull_request:
  push:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

    strategy:
      matrix:
        node-version: [v16]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: |
          npm i --no-optional
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

      - run: npm run test

      - uses: codecov/codecov-action@v3
        with:
          # token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ./coverage1.xml,./coverage2.xml # optional
          flags: unittests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)

  lint:
    runs-on: ubuntu-latest
    env:
      FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

    strategy:
      matrix:
        node-version: [v16]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: |
          npm i --no-optional
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

      - run: npm run lint
